(function() {var type_impls = {
"spin_core":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Linker%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/wasmtime/15.0.0/src/wasmtime/linker.rs.html#174\">source</a><a href=\"#impl-Linker%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html\" title=\"struct wasmtime::linker::Linker\">Linker</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/wasmtime/15.0.0/src/wasmtime/linker.rs.html#181\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html#tymethod.new\" class=\"fn\">new</a>(engine: &amp;<a class=\"struct\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/engine/struct.Engine.html\" title=\"struct wasmtime::engine::Engine\">Engine</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html\" title=\"struct wasmtime::linker::Linker\">Linker</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a new <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html\" title=\"struct wasmtime::linker::Linker\"><code>Linker</code></a>.</p>\n<p>The linker will define functions within the context of the <code>engine</code>\nprovided and can only instantiate modules for a <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/store/struct.Store.html\" title=\"struct wasmtime::store::Store\"><code>Store</code></a>\nthat is also defined within the same <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/engine/struct.Engine.html\" title=\"struct wasmtime::engine::Engine\"><code>Engine</code></a>. Usage of stores with\ndifferent <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/engine/struct.Engine.html\" title=\"struct wasmtime::engine::Engine\"><code>Engine</code></a>s may cause a panic when used with this <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html\" title=\"struct wasmtime::linker::Linker\"><code>Linker</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.engine\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/wasmtime/15.0.0/src/wasmtime/linker.rs.html#194\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html#tymethod.engine\" class=\"fn\">engine</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/engine/struct.Engine.html\" title=\"struct wasmtime::engine::Engine\">Engine</a></h4></section></summary><div class=\"docblock\"><p>Returns the <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/engine/struct.Engine.html\" title=\"struct wasmtime::engine::Engine\"><code>Engine</code></a> this is connected to.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.allow_shadowing\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/wasmtime/15.0.0/src/wasmtime/linker.rs.html#223\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html#tymethod.allow_shadowing\" class=\"fn\">allow_shadowing</a>(&amp;mut self, allow: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>) -&gt; &amp;mut <a class=\"struct\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html\" title=\"struct wasmtime::linker::Linker\">Linker</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Configures whether this <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html\" title=\"struct wasmtime::linker::Linker\"><code>Linker</code></a> will shadow previous duplicate\ndefinitions of the same signature.</p>\n<p>By default a <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html\" title=\"struct wasmtime::linker::Linker\"><code>Linker</code></a> will disallow duplicate definitions of the same\nsignature. This method, however, can be used to instead allow duplicates\nand have the latest definition take precedence when linking modules.</p>\n<h5 id=\"examples\"><a href=\"#examples\">Examples</a></h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>linker = Linker::&lt;()&gt;::new(<span class=\"kw-2\">&amp;</span>engine);\nlinker.func_wrap(<span class=\"string\">\"\"</span>, <span class=\"string\">\"\"</span>, || {})<span class=\"question-mark\">?</span>;\n\n<span class=\"comment\">// by default, duplicates are disallowed\n</span><span class=\"macro\">assert!</span>(linker.func_wrap(<span class=\"string\">\"\"</span>, <span class=\"string\">\"\"</span>, || {}).is_err());\n\n<span class=\"comment\">// but shadowing can be configured to be allowed as well\n</span>linker.allow_shadowing(<span class=\"bool-val\">true</span>);\nlinker.func_wrap(<span class=\"string\">\"\"</span>, <span class=\"string\">\"\"</span>, || {})<span class=\"question-mark\">?</span>;</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.allow_unknown_exports\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/wasmtime/15.0.0/src/wasmtime/linker.rs.html#250\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html#tymethod.allow_unknown_exports\" class=\"fn\">allow_unknown_exports</a>(&amp;mut self, allow: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>) -&gt; &amp;mut <a class=\"struct\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html\" title=\"struct wasmtime::linker::Linker\">Linker</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Configures whether this <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html\" title=\"struct wasmtime::linker::Linker\"><code>Linker</code></a> will allow unknown exports from\ncommand modules.</p>\n<p>By default a <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html\" title=\"struct wasmtime::linker::Linker\"><code>Linker</code></a> will error when unknown exports are encountered\nin a command module while using <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html#method.module\" title=\"method wasmtime::linker::Linker::module\"><code>Linker::module</code></a>.</p>\n<p>This method can be used to allow unknown exports from command modules.</p>\n<h5 id=\"examples-1\"><a href=\"#examples-1\">Examples</a></h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>linker = Linker::new(<span class=\"kw-2\">&amp;</span>engine);\nlinker.allow_unknown_exports(<span class=\"bool-val\">true</span>);\nlinker.module(<span class=\"kw-2\">&amp;mut </span>store, <span class=\"string\">\"mod\"</span>, <span class=\"kw-2\">&amp;</span>module)<span class=\"question-mark\">?</span>;</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.define_unknown_imports_as_traps\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/wasmtime/15.0.0/src/wasmtime/linker.rs.html#279\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html#tymethod.define_unknown_imports_as_traps\" class=\"fn\">define_unknown_imports_as_traps</a>(\n    &amp;mut self,\n    module: &amp;<a class=\"struct\" href=\"spin_core/struct.Module.html\" title=\"struct spin_core::Module\">Module</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Implement any imports of the given <a href=\"spin_core/struct.Module.html\" title=\"struct spin_core::Module\"><code>Module</code></a> with a function which traps.</p>\n<p>By default a <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html\" title=\"struct wasmtime::linker::Linker\"><code>Linker</code></a> will error when unknown imports are encountered\nin a command module while using <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html#method.module\" title=\"method wasmtime::linker::Linker::module\"><code>Linker::module</code></a>. Use this function\nwhen</p>\n<p>This method can be used to allow unknown imports from command modules.</p>\n<h5 id=\"examples-2\"><a href=\"#examples-2\">Examples</a></h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>linker = Linker::new(<span class=\"kw-2\">&amp;</span>engine);\nlinker.define_unknown_imports_as_traps(<span class=\"kw-2\">&amp;</span>module)<span class=\"question-mark\">?</span>;\nlinker.instantiate(<span class=\"kw-2\">&amp;mut </span>store, <span class=\"kw-2\">&amp;</span>module)<span class=\"question-mark\">?</span>;</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.define_unknown_imports_as_default_values\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/wasmtime/15.0.0/src/wasmtime/linker.rs.html#315-318\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html#tymethod.define_unknown_imports_as_default_values\" class=\"fn\">define_unknown_imports_as_default_values</a>(\n    &amp;mut self,\n    module: &amp;<a class=\"struct\" href=\"spin_core/struct.Module.html\" title=\"struct spin_core::Module\">Module</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Implement any function imports of the <a href=\"spin_core/struct.Module.html\" title=\"struct spin_core::Module\"><code>Module</code></a> with a function that\nignores its arguments and returns default values.</p>\n<p>Default values are either zero or null, depending on the value type.</p>\n<p>This method can be used to allow unknown imports from command modules.</p>\n<h5 id=\"example\"><a href=\"#example\">Example</a></h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>linker = Linker::new(<span class=\"kw-2\">&amp;</span>engine);\nlinker.define_unknown_imports_as_default_values(<span class=\"kw-2\">&amp;</span>module)<span class=\"question-mark\">?</span>;\nlinker.instantiate(<span class=\"kw-2\">&amp;mut </span>store, <span class=\"kw-2\">&amp;</span>module)<span class=\"question-mark\">?</span>;</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.define\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/wasmtime/15.0.0/src/wasmtime/linker.rs.html#384-390\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html#tymethod.define\" class=\"fn\">define</a>(\n    &amp;mut self,\n    store: impl <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/store/context/trait.AsContext.html\" title=\"trait wasmtime::store::context::AsContext\">AsContext</a>&lt;Data = T&gt;,\n    module: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n    name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n    item: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/externals/enum.Extern.html\" title=\"enum wasmtime::externals::Extern\">Extern</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;mut <a class=\"struct\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html\" title=\"struct wasmtime::linker::Linker\">Linker</a>&lt;T&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Defines a new item in this <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html\" title=\"struct wasmtime::linker::Linker\"><code>Linker</code></a>.</p>\n<p>This method will add a new definition, by name, to this instance of\n<a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html\" title=\"struct wasmtime::linker::Linker\"><code>Linker</code></a>. The <code>module</code> and <code>name</code> provided are what to name the\n<code>item</code>.</p>\n<h5 id=\"errors\"><a href=\"#errors\">Errors</a></h5>\n<p>Returns an error if the <code>module</code> and <code>name</code> already identify an item\nof the same type as the <code>item</code> provided and if shadowing is disallowed.\nFor more information see the documentation on <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html\" title=\"struct wasmtime::linker::Linker\"><code>Linker</code></a>.</p>\n<h5 id=\"examples-3\"><a href=\"#examples-3\">Examples</a></h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>linker = Linker::new(<span class=\"kw-2\">&amp;</span>engine);\n<span class=\"kw\">let </span>ty = GlobalType::new(ValType::I32, Mutability::Const);\n<span class=\"kw\">let </span>global = Global::new(<span class=\"kw-2\">&amp;mut </span>store, ty, Val::I32(<span class=\"number\">0x1234</span>))<span class=\"question-mark\">?</span>;\nlinker.define(<span class=\"kw-2\">&amp;</span>store, <span class=\"string\">\"host\"</span>, <span class=\"string\">\"offset\"</span>, global)<span class=\"question-mark\">?</span>;\n\n<span class=\"kw\">let </span>wat = <span class=\"string\">r#\"\n    (module\n        (import \"host\" \"offset\" (global i32))\n        (memory 1)\n        (data (global.get 0) \"foo\")\n    )\n\"#</span>;\n<span class=\"kw\">let </span>module = Module::new(<span class=\"kw-2\">&amp;</span>engine, wat)<span class=\"question-mark\">?</span>;\nlinker.instantiate(<span class=\"kw-2\">&amp;mut </span>store, <span class=\"kw-2\">&amp;</span>module)<span class=\"question-mark\">?</span>;</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.define_name\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/wasmtime/15.0.0/src/wasmtime/linker.rs.html#403-408\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html#tymethod.define_name\" class=\"fn\">define_name</a>(\n    &amp;mut self,\n    store: impl <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/store/context/trait.AsContext.html\" title=\"trait wasmtime::store::context::AsContext\">AsContext</a>&lt;Data = T&gt;,\n    name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n    item: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/externals/enum.Extern.html\" title=\"enum wasmtime::externals::Extern\">Extern</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;mut <a class=\"struct\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html\" title=\"struct wasmtime::linker::Linker\">Linker</a>&lt;T&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Same as <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html#method.define\" title=\"method wasmtime::linker::Linker::define\"><code>Linker::define</code></a>, except only the name of the import is\nprovided, not a module name as well.</p>\n<p>This is only relevant when working with the module linking proposal\nwhere one-level names are allowed (in addition to two-level names).\nOtherwise this method need not be used.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.func_new\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/wasmtime/15.0.0/src/wasmtime/linker.rs.html#420-426\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html#tymethod.func_new\" class=\"fn\">func_new</a>(\n    &amp;mut self,\n    module: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n    name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n    ty: <a class=\"struct\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/types/struct.FuncType.html\" title=\"struct wasmtime::types::FuncType\">FuncType</a>,\n    func: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"struct\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/struct.Caller.html\" title=\"struct wasmtime::func::Caller\">Caller</a>&lt;'_, T&gt;, &amp;[<a class=\"enum\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/values/enum.Val.html\" title=\"enum wasmtime::values::Val\">Val</a>], &amp;mut [<a class=\"enum\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/values/enum.Val.html\" title=\"enum wasmtime::values::Val\">Val</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;mut <a class=\"struct\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html\" title=\"struct wasmtime::linker::Linker\">Linker</a>&lt;T&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/struct.Func.html#method.new\" title=\"associated function wasmtime::func::Func::new\"><code>Func::new</code></a>-style function named in this linker.</p>\n<p>For more information see <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html#method.func_wrap\" title=\"method wasmtime::linker::Linker::func_wrap\"><code>Linker::func_wrap</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.func_new_unchecked\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/wasmtime/15.0.0/src/wasmtime/linker.rs.html#438-444\">source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html#tymethod.func_new_unchecked\" class=\"fn\">func_new_unchecked</a>(\n    &amp;mut self,\n    module: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n    name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n    ty: <a class=\"struct\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/types/struct.FuncType.html\" title=\"struct wasmtime::types::FuncType\">FuncType</a>,\n    func: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"struct\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/struct.Caller.html\" title=\"struct wasmtime::func::Caller\">Caller</a>&lt;'_, T&gt;, &amp;mut [ValRaw]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;mut <a class=\"struct\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html\" title=\"struct wasmtime::linker::Linker\">Linker</a>&lt;T&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/struct.Func.html#method.new_unchecked\" title=\"associated function wasmtime::func::Func::new_unchecked\"><code>Func::new_unchecked</code></a>-style function named in this linker.</p>\n<p>For more information see <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html#method.func_wrap\" title=\"method wasmtime::linker::Linker::func_wrap\"><code>Linker::func_wrap</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.func_new_async\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/wasmtime/15.0.0/src/wasmtime/linker.rs.html#456-471\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html#tymethod.func_new_async\" class=\"fn\">func_new_async</a>&lt;F&gt;(\n    &amp;mut self,\n    module: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n    name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n    ty: <a class=\"struct\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/types/struct.FuncType.html\" title=\"struct wasmtime::types::FuncType\">FuncType</a>,\n    func: F\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;mut <a class=\"struct\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html\" title=\"struct wasmtime::linker::Linker\">Linker</a>&lt;T&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;<div class=\"where\">where\n    F: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"struct\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/struct.Caller.html\" title=\"struct wasmtime::func::Caller\">Caller</a>&lt;'a, T&gt;, &amp;'a [<a class=\"enum\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/values/enum.Val.html\" title=\"enum wasmtime::values::Val\">Val</a>], &amp;'a mut [<a class=\"enum\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/values/enum.Val.html\" title=\"enum wasmtime::values::Val\">Val</a>]) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'a&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,</div></h4></section></summary><div class=\"docblock\"><p>Creates a <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/struct.Func.html#method.new_async\" title=\"associated function wasmtime::func::Func::new_async\"><code>Func::new_async</code></a>-style function named in this linker.</p>\n<p>For more information see <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html#method.func_wrap\" title=\"method wasmtime::linker::Linker::func_wrap\"><code>Linker::func_wrap</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.func_wrap\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/wasmtime/15.0.0/src/wasmtime/linker.rs.html#548-553\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html#tymethod.func_wrap\" class=\"fn\">func_wrap</a>&lt;Params, Args&gt;(\n    &amp;mut self,\n    module: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n    name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n    func: impl <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/trait.IntoFunc.html\" title=\"trait wasmtime::func::IntoFunc\">IntoFunc</a>&lt;T, Params, Args&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;mut <a class=\"struct\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html\" title=\"struct wasmtime::linker::Linker\">Linker</a>&lt;T&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Define a host function within this linker.</p>\n<p>For information about how the host function operates, see\n<a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/struct.Func.html#method.wrap\" title=\"associated function wasmtime::func::Func::wrap\"><code>Func::wrap</code></a>. That includes information about translating Rust types\nto WebAssembly native types.</p>\n<p>This method creates a host-provided function in this linker under the\nprovided name. This method is distinct in its capability to create a\n<a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/store/struct.Store.html\" title=\"struct wasmtime::store::Store\"><code>Store</code></a>-independent function. This means that the\nfunction defined here can be used to instantiate instances in multiple\ndifferent stores, or in other words the function can be loaded into\ndifferent stores.</p>\n<p>Note that the capability mentioned here applies to all other\nhost-function-defining-methods on <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html\" title=\"struct wasmtime::linker::Linker\"><code>Linker</code></a> as well. All of them can be\nused to create instances of <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/struct.Func.html\" title=\"struct wasmtime::func::Func\"><code>Func</code></a> within multiple stores. In a\nmultithreaded program, for example, this means that the host functions\ncould be called concurrently if different stores are executing on\ndifferent threads.</p>\n<h5 id=\"errors-1\"><a href=\"#errors-1\">Errors</a></h5>\n<p>Returns an error if the <code>module</code> and <code>name</code> already identify an item\nof the same type as the <code>item</code> provided and if shadowing is disallowed.\nFor more information see the documentation on <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html\" title=\"struct wasmtime::linker::Linker\"><code>Linker</code></a>.</p>\n<h5 id=\"examples-4\"><a href=\"#examples-4\">Examples</a></h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>linker = Linker::new(<span class=\"kw-2\">&amp;</span>engine);\nlinker.func_wrap(<span class=\"string\">\"host\"</span>, <span class=\"string\">\"double\"</span>, |x: i32| x * <span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\nlinker.func_wrap(<span class=\"string\">\"host\"</span>, <span class=\"string\">\"log_i32\"</span>, |x: i32| <span class=\"macro\">println!</span>(<span class=\"string\">\"{}\"</span>, x))<span class=\"question-mark\">?</span>;\nlinker.func_wrap(<span class=\"string\">\"host\"</span>, <span class=\"string\">\"log_str\"</span>, |caller: Caller&lt;<span class=\"lifetime\">'_</span>, ()&gt;, ptr: i32, len: i32| {\n    <span class=\"comment\">// ...\n</span>})<span class=\"question-mark\">?</span>;\n\n<span class=\"kw\">let </span>wat = <span class=\"string\">r#\"\n    (module\n        (import \"host\" \"double\" (func (param i32) (result i32)))\n        (import \"host\" \"log_i32\" (func (param i32)))\n        (import \"host\" \"log_str\" (func (param i32 i32)))\n    )\n\"#</span>;\n<span class=\"kw\">let </span>module = Module::new(<span class=\"kw-2\">&amp;</span>engine, wat)<span class=\"question-mark\">?</span>;\n\n<span class=\"comment\">// instantiate in multiple different stores\n</span><span class=\"kw\">for _ in </span><span class=\"number\">0</span>..<span class=\"number\">10 </span>{\n    <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>store = Store::new(<span class=\"kw-2\">&amp;</span>engine, ());\n    linker.instantiate(<span class=\"kw-2\">&amp;mut </span>store, <span class=\"kw-2\">&amp;</span>module)<span class=\"question-mark\">?</span>;\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.func_wrap0_async\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/wasmtime/15.0.0/src/wasmtime/linker.rs.html#560\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html#tymethod.func_wrap0_async\" class=\"fn\">func_wrap0_async</a>&lt;R&gt;(\n    &amp;mut self,\n    module: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n    name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n    func: impl for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"struct\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/struct.Caller.html\" title=\"struct wasmtime::func::Caller\">Caller</a>&lt;'a, T&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = R&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'a&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;mut <a class=\"struct\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html\" title=\"struct wasmtime::linker::Linker\">Linker</a>&lt;T&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/trait.WasmRet.html\" title=\"trait wasmtime::func::WasmRet\">WasmRet</a>,</div></h4></section></summary><div class=\"docblock\"><p>Asynchronous analog of <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html#method.func_wrap\" title=\"method wasmtime::linker::Linker::func_wrap\"><code>Linker::func_wrap</code></a>.</p>\n<p>For more information also see\n<a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/struct.Func.html#method.wrap1_async\" title=\"associated function wasmtime::func::Func::wrap1_async\"><code>Func::wrapN_async</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.func_wrap1_async\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/wasmtime/15.0.0/src/wasmtime/linker.rs.html#560\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html#tymethod.func_wrap1_async\" class=\"fn\">func_wrap1_async</a>&lt;A1, R&gt;(\n    &amp;mut self,\n    module: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n    name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n    func: impl for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"struct\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/struct.Caller.html\" title=\"struct wasmtime::func::Caller\">Caller</a>&lt;'a, T&gt;, A1) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = R&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'a&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;mut <a class=\"struct\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html\" title=\"struct wasmtime::linker::Linker\">Linker</a>&lt;T&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;<div class=\"where\">where\n    A1: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    R: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/trait.WasmRet.html\" title=\"trait wasmtime::func::WasmRet\">WasmRet</a>,</div></h4></section></summary><div class=\"docblock\"><p>Asynchronous analog of <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html#method.func_wrap\" title=\"method wasmtime::linker::Linker::func_wrap\"><code>Linker::func_wrap</code></a>.</p>\n<p>For more information also see\n<a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/struct.Func.html#method.wrap1_async\" title=\"associated function wasmtime::func::Func::wrap1_async\"><code>Func::wrapN_async</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.func_wrap2_async\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/wasmtime/15.0.0/src/wasmtime/linker.rs.html#560\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html#tymethod.func_wrap2_async\" class=\"fn\">func_wrap2_async</a>&lt;A1, A2, R&gt;(\n    &amp;mut self,\n    module: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n    name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n    func: impl for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"struct\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/struct.Caller.html\" title=\"struct wasmtime::func::Caller\">Caller</a>&lt;'a, T&gt;, A1, A2) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = R&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'a&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;mut <a class=\"struct\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html\" title=\"struct wasmtime::linker::Linker\">Linker</a>&lt;T&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;<div class=\"where\">where\n    A1: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A2: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    R: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/trait.WasmRet.html\" title=\"trait wasmtime::func::WasmRet\">WasmRet</a>,</div></h4></section></summary><div class=\"docblock\"><p>Asynchronous analog of <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html#method.func_wrap\" title=\"method wasmtime::linker::Linker::func_wrap\"><code>Linker::func_wrap</code></a>.</p>\n<p>For more information also see\n<a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/struct.Func.html#method.wrap1_async\" title=\"associated function wasmtime::func::Func::wrap1_async\"><code>Func::wrapN_async</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.func_wrap3_async\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/wasmtime/15.0.0/src/wasmtime/linker.rs.html#560\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html#tymethod.func_wrap3_async\" class=\"fn\">func_wrap3_async</a>&lt;A1, A2, A3, R&gt;(\n    &amp;mut self,\n    module: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n    name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n    func: impl for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"struct\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/struct.Caller.html\" title=\"struct wasmtime::func::Caller\">Caller</a>&lt;'a, T&gt;, A1, A2, A3) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = R&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'a&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;mut <a class=\"struct\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html\" title=\"struct wasmtime::linker::Linker\">Linker</a>&lt;T&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;<div class=\"where\">where\n    A1: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A2: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A3: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    R: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/trait.WasmRet.html\" title=\"trait wasmtime::func::WasmRet\">WasmRet</a>,</div></h4></section></summary><div class=\"docblock\"><p>Asynchronous analog of <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html#method.func_wrap\" title=\"method wasmtime::linker::Linker::func_wrap\"><code>Linker::func_wrap</code></a>.</p>\n<p>For more information also see\n<a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/struct.Func.html#method.wrap1_async\" title=\"associated function wasmtime::func::Func::wrap1_async\"><code>Func::wrapN_async</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.func_wrap4_async\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/wasmtime/15.0.0/src/wasmtime/linker.rs.html#560\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html#tymethod.func_wrap4_async\" class=\"fn\">func_wrap4_async</a>&lt;A1, A2, A3, A4, R&gt;(\n    &amp;mut self,\n    module: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n    name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n    func: impl for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"struct\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/struct.Caller.html\" title=\"struct wasmtime::func::Caller\">Caller</a>&lt;'a, T&gt;, A1, A2, A3, A4) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = R&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'a&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;mut <a class=\"struct\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html\" title=\"struct wasmtime::linker::Linker\">Linker</a>&lt;T&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;<div class=\"where\">where\n    A1: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A2: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A3: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A4: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    R: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/trait.WasmRet.html\" title=\"trait wasmtime::func::WasmRet\">WasmRet</a>,</div></h4></section></summary><div class=\"docblock\"><p>Asynchronous analog of <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html#method.func_wrap\" title=\"method wasmtime::linker::Linker::func_wrap\"><code>Linker::func_wrap</code></a>.</p>\n<p>For more information also see\n<a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/struct.Func.html#method.wrap1_async\" title=\"associated function wasmtime::func::Func::wrap1_async\"><code>Func::wrapN_async</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.func_wrap5_async\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/wasmtime/15.0.0/src/wasmtime/linker.rs.html#560\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html#tymethod.func_wrap5_async\" class=\"fn\">func_wrap5_async</a>&lt;A1, A2, A3, A4, A5, R&gt;(\n    &amp;mut self,\n    module: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n    name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n    func: impl for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"struct\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/struct.Caller.html\" title=\"struct wasmtime::func::Caller\">Caller</a>&lt;'a, T&gt;, A1, A2, A3, A4, A5) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = R&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'a&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;mut <a class=\"struct\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html\" title=\"struct wasmtime::linker::Linker\">Linker</a>&lt;T&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;<div class=\"where\">where\n    A1: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A2: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A3: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A4: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A5: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    R: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/trait.WasmRet.html\" title=\"trait wasmtime::func::WasmRet\">WasmRet</a>,</div></h4></section></summary><div class=\"docblock\"><p>Asynchronous analog of <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html#method.func_wrap\" title=\"method wasmtime::linker::Linker::func_wrap\"><code>Linker::func_wrap</code></a>.</p>\n<p>For more information also see\n<a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/struct.Func.html#method.wrap1_async\" title=\"associated function wasmtime::func::Func::wrap1_async\"><code>Func::wrapN_async</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.func_wrap6_async\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/wasmtime/15.0.0/src/wasmtime/linker.rs.html#560\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html#tymethod.func_wrap6_async\" class=\"fn\">func_wrap6_async</a>&lt;A1, A2, A3, A4, A5, A6, R&gt;(\n    &amp;mut self,\n    module: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n    name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n    func: impl for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"struct\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/struct.Caller.html\" title=\"struct wasmtime::func::Caller\">Caller</a>&lt;'a, T&gt;, A1, A2, A3, A4, A5, A6) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = R&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'a&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;mut <a class=\"struct\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html\" title=\"struct wasmtime::linker::Linker\">Linker</a>&lt;T&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;<div class=\"where\">where\n    A1: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A2: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A3: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A4: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A5: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A6: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    R: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/trait.WasmRet.html\" title=\"trait wasmtime::func::WasmRet\">WasmRet</a>,</div></h4></section></summary><div class=\"docblock\"><p>Asynchronous analog of <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html#method.func_wrap\" title=\"method wasmtime::linker::Linker::func_wrap\"><code>Linker::func_wrap</code></a>.</p>\n<p>For more information also see\n<a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/struct.Func.html#method.wrap1_async\" title=\"associated function wasmtime::func::Func::wrap1_async\"><code>Func::wrapN_async</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.func_wrap7_async\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/wasmtime/15.0.0/src/wasmtime/linker.rs.html#560\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html#tymethod.func_wrap7_async\" class=\"fn\">func_wrap7_async</a>&lt;A1, A2, A3, A4, A5, A6, A7, R&gt;(\n    &amp;mut self,\n    module: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n    name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n    func: impl for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"struct\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/struct.Caller.html\" title=\"struct wasmtime::func::Caller\">Caller</a>&lt;'a, T&gt;, A1, A2, A3, A4, A5, A6, A7) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = R&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'a&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;mut <a class=\"struct\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html\" title=\"struct wasmtime::linker::Linker\">Linker</a>&lt;T&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;<div class=\"where\">where\n    A1: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A2: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A3: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A4: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A5: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A6: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A7: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    R: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/trait.WasmRet.html\" title=\"trait wasmtime::func::WasmRet\">WasmRet</a>,</div></h4></section></summary><div class=\"docblock\"><p>Asynchronous analog of <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html#method.func_wrap\" title=\"method wasmtime::linker::Linker::func_wrap\"><code>Linker::func_wrap</code></a>.</p>\n<p>For more information also see\n<a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/struct.Func.html#method.wrap1_async\" title=\"associated function wasmtime::func::Func::wrap1_async\"><code>Func::wrapN_async</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.func_wrap8_async\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/wasmtime/15.0.0/src/wasmtime/linker.rs.html#560\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html#tymethod.func_wrap8_async\" class=\"fn\">func_wrap8_async</a>&lt;A1, A2, A3, A4, A5, A6, A7, A8, R&gt;(\n    &amp;mut self,\n    module: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n    name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n    func: impl for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"struct\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/struct.Caller.html\" title=\"struct wasmtime::func::Caller\">Caller</a>&lt;'a, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = R&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'a&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;mut <a class=\"struct\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html\" title=\"struct wasmtime::linker::Linker\">Linker</a>&lt;T&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;<div class=\"where\">where\n    A1: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A2: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A3: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A4: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A5: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A6: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A7: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A8: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    R: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/trait.WasmRet.html\" title=\"trait wasmtime::func::WasmRet\">WasmRet</a>,</div></h4></section></summary><div class=\"docblock\"><p>Asynchronous analog of <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html#method.func_wrap\" title=\"method wasmtime::linker::Linker::func_wrap\"><code>Linker::func_wrap</code></a>.</p>\n<p>For more information also see\n<a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/struct.Func.html#method.wrap1_async\" title=\"associated function wasmtime::func::Func::wrap1_async\"><code>Func::wrapN_async</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.func_wrap9_async\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/wasmtime/15.0.0/src/wasmtime/linker.rs.html#560\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html#tymethod.func_wrap9_async\" class=\"fn\">func_wrap9_async</a>&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, R&gt;(\n    &amp;mut self,\n    module: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n    name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n    func: impl for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"struct\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/struct.Caller.html\" title=\"struct wasmtime::func::Caller\">Caller</a>&lt;'a, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = R&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'a&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;mut <a class=\"struct\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html\" title=\"struct wasmtime::linker::Linker\">Linker</a>&lt;T&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;<div class=\"where\">where\n    A1: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A2: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A3: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A4: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A5: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A6: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A7: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A8: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A9: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    R: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/trait.WasmRet.html\" title=\"trait wasmtime::func::WasmRet\">WasmRet</a>,</div></h4></section></summary><div class=\"docblock\"><p>Asynchronous analog of <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html#method.func_wrap\" title=\"method wasmtime::linker::Linker::func_wrap\"><code>Linker::func_wrap</code></a>.</p>\n<p>For more information also see\n<a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/struct.Func.html#method.wrap1_async\" title=\"associated function wasmtime::func::Func::wrap1_async\"><code>Func::wrapN_async</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.func_wrap10_async\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/wasmtime/15.0.0/src/wasmtime/linker.rs.html#560\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html#tymethod.func_wrap10_async\" class=\"fn\">func_wrap10_async</a>&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, R&gt;(\n    &amp;mut self,\n    module: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n    name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n    func: impl for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"struct\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/struct.Caller.html\" title=\"struct wasmtime::func::Caller\">Caller</a>&lt;'a, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = R&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'a&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;mut <a class=\"struct\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html\" title=\"struct wasmtime::linker::Linker\">Linker</a>&lt;T&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;<div class=\"where\">where\n    A1: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A2: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A3: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A4: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A5: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A6: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A7: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A8: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A9: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A10: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    R: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/trait.WasmRet.html\" title=\"trait wasmtime::func::WasmRet\">WasmRet</a>,</div></h4></section></summary><div class=\"docblock\"><p>Asynchronous analog of <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html#method.func_wrap\" title=\"method wasmtime::linker::Linker::func_wrap\"><code>Linker::func_wrap</code></a>.</p>\n<p>For more information also see\n<a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/struct.Func.html#method.wrap1_async\" title=\"associated function wasmtime::func::Func::wrap1_async\"><code>Func::wrapN_async</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.func_wrap11_async\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/wasmtime/15.0.0/src/wasmtime/linker.rs.html#560\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html#tymethod.func_wrap11_async\" class=\"fn\">func_wrap11_async</a>&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, R&gt;(\n    &amp;mut self,\n    module: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n    name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n    func: impl for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"struct\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/struct.Caller.html\" title=\"struct wasmtime::func::Caller\">Caller</a>&lt;'a, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = R&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'a&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;mut <a class=\"struct\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html\" title=\"struct wasmtime::linker::Linker\">Linker</a>&lt;T&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;<div class=\"where\">where\n    A1: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A2: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A3: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A4: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A5: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A6: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A7: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A8: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A9: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A10: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A11: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    R: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/trait.WasmRet.html\" title=\"trait wasmtime::func::WasmRet\">WasmRet</a>,</div></h4></section></summary><div class=\"docblock\"><p>Asynchronous analog of <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html#method.func_wrap\" title=\"method wasmtime::linker::Linker::func_wrap\"><code>Linker::func_wrap</code></a>.</p>\n<p>For more information also see\n<a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/struct.Func.html#method.wrap1_async\" title=\"associated function wasmtime::func::Func::wrap1_async\"><code>Func::wrapN_async</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.func_wrap12_async\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/wasmtime/15.0.0/src/wasmtime/linker.rs.html#560\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html#tymethod.func_wrap12_async\" class=\"fn\">func_wrap12_async</a>&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, R&gt;(\n    &amp;mut self,\n    module: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n    name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n    func: impl for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"struct\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/struct.Caller.html\" title=\"struct wasmtime::func::Caller\">Caller</a>&lt;'a, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = R&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'a&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;mut <a class=\"struct\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html\" title=\"struct wasmtime::linker::Linker\">Linker</a>&lt;T&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;<div class=\"where\">where\n    A1: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A2: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A3: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A4: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A5: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A6: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A7: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A8: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A9: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A10: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A11: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A12: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    R: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/trait.WasmRet.html\" title=\"trait wasmtime::func::WasmRet\">WasmRet</a>,</div></h4></section></summary><div class=\"docblock\"><p>Asynchronous analog of <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html#method.func_wrap\" title=\"method wasmtime::linker::Linker::func_wrap\"><code>Linker::func_wrap</code></a>.</p>\n<p>For more information also see\n<a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/struct.Func.html#method.wrap1_async\" title=\"associated function wasmtime::func::Func::wrap1_async\"><code>Func::wrapN_async</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.func_wrap13_async\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/wasmtime/15.0.0/src/wasmtime/linker.rs.html#560\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html#tymethod.func_wrap13_async\" class=\"fn\">func_wrap13_async</a>&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, R&gt;(\n    &amp;mut self,\n    module: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n    name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n    func: impl for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"struct\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/struct.Caller.html\" title=\"struct wasmtime::func::Caller\">Caller</a>&lt;'a, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = R&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'a&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;mut <a class=\"struct\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html\" title=\"struct wasmtime::linker::Linker\">Linker</a>&lt;T&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;<div class=\"where\">where\n    A1: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A2: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A3: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A4: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A5: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A6: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A7: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A8: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A9: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A10: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A11: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A12: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A13: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    R: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/trait.WasmRet.html\" title=\"trait wasmtime::func::WasmRet\">WasmRet</a>,</div></h4></section></summary><div class=\"docblock\"><p>Asynchronous analog of <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html#method.func_wrap\" title=\"method wasmtime::linker::Linker::func_wrap\"><code>Linker::func_wrap</code></a>.</p>\n<p>For more information also see\n<a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/struct.Func.html#method.wrap1_async\" title=\"associated function wasmtime::func::Func::wrap1_async\"><code>Func::wrapN_async</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.func_wrap14_async\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/wasmtime/15.0.0/src/wasmtime/linker.rs.html#560\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html#tymethod.func_wrap14_async\" class=\"fn\">func_wrap14_async</a>&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, R&gt;(\n    &amp;mut self,\n    module: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n    name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n    func: impl for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"struct\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/struct.Caller.html\" title=\"struct wasmtime::func::Caller\">Caller</a>&lt;'a, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = R&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'a&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;mut <a class=\"struct\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html\" title=\"struct wasmtime::linker::Linker\">Linker</a>&lt;T&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;<div class=\"where\">where\n    A1: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A2: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A3: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A4: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A5: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A6: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A7: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A8: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A9: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A10: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A11: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A12: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A13: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A14: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    R: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/trait.WasmRet.html\" title=\"trait wasmtime::func::WasmRet\">WasmRet</a>,</div></h4></section></summary><div class=\"docblock\"><p>Asynchronous analog of <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html#method.func_wrap\" title=\"method wasmtime::linker::Linker::func_wrap\"><code>Linker::func_wrap</code></a>.</p>\n<p>For more information also see\n<a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/struct.Func.html#method.wrap1_async\" title=\"associated function wasmtime::func::Func::wrap1_async\"><code>Func::wrapN_async</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.func_wrap15_async\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/wasmtime/15.0.0/src/wasmtime/linker.rs.html#560\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html#tymethod.func_wrap15_async\" class=\"fn\">func_wrap15_async</a>&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, R&gt;(\n    &amp;mut self,\n    module: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n    name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n    func: impl for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"struct\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/struct.Caller.html\" title=\"struct wasmtime::func::Caller\">Caller</a>&lt;'a, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = R&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'a&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;mut <a class=\"struct\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html\" title=\"struct wasmtime::linker::Linker\">Linker</a>&lt;T&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;<div class=\"where\">where\n    A1: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A2: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A3: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A4: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A5: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A6: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A7: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A8: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A9: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A10: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A11: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A12: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A13: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A14: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A15: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    R: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/trait.WasmRet.html\" title=\"trait wasmtime::func::WasmRet\">WasmRet</a>,</div></h4></section></summary><div class=\"docblock\"><p>Asynchronous analog of <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html#method.func_wrap\" title=\"method wasmtime::linker::Linker::func_wrap\"><code>Linker::func_wrap</code></a>.</p>\n<p>For more information also see\n<a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/struct.Func.html#method.wrap1_async\" title=\"associated function wasmtime::func::Func::wrap1_async\"><code>Func::wrapN_async</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.func_wrap16_async\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/wasmtime/15.0.0/src/wasmtime/linker.rs.html#560\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html#tymethod.func_wrap16_async\" class=\"fn\">func_wrap16_async</a>&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, R&gt;(\n    &amp;mut self,\n    module: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n    name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n    func: impl for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"struct\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/struct.Caller.html\" title=\"struct wasmtime::func::Caller\">Caller</a>&lt;'a, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = R&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'a&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;mut <a class=\"struct\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html\" title=\"struct wasmtime::linker::Linker\">Linker</a>&lt;T&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;<div class=\"where\">where\n    A1: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A2: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A3: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A4: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A5: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A6: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A7: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A8: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A9: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A10: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A11: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A12: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A13: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A14: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A15: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    A16: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/typed/trait.WasmTy.html\" title=\"trait wasmtime::func::typed::WasmTy\">WasmTy</a>,\n    R: <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/trait.WasmRet.html\" title=\"trait wasmtime::func::WasmRet\">WasmRet</a>,</div></h4></section></summary><div class=\"docblock\"><p>Asynchronous analog of <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html#method.func_wrap\" title=\"method wasmtime::linker::Linker::func_wrap\"><code>Linker::func_wrap</code></a>.</p>\n<p>For more information also see\n<a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/struct.Func.html#method.wrap1_async\" title=\"associated function wasmtime::func::Func::wrap1_async\"><code>Func::wrapN_async</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.instance\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/wasmtime/15.0.0/src/wasmtime/linker.rs.html#618-623\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html#tymethod.instance\" class=\"fn\">instance</a>(\n    &amp;mut self,\n    store: impl <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/store/context/trait.AsContextMut.html\" title=\"trait wasmtime::store::context::AsContextMut\">AsContextMut</a>&lt;Data = T&gt;,\n    module_name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n    instance: <a class=\"struct\" href=\"spin_core/struct.ModuleInstance.html\" title=\"struct spin_core::ModuleInstance\">Instance</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;mut <a class=\"struct\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html\" title=\"struct wasmtime::linker::Linker\">Linker</a>&lt;T&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Convenience wrapper to define an entire <a href=\"spin_core/struct.ModuleInstance.html\" title=\"struct spin_core::ModuleInstance\"><code>Instance</code></a> in this linker.</p>\n<p>This function is a convenience wrapper around <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html#method.define\" title=\"method wasmtime::linker::Linker::define\"><code>Linker::define</code></a> which\nwill define all exports on <code>instance</code> into this linker. The module name\nfor each export is <code>module_name</code>, and the name for each export is the\nname in the instance itself.</p>\n<p>Note that when this API is used the <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html\" title=\"struct wasmtime::linker::Linker\"><code>Linker</code></a> is no longer compatible\nwith multi-<a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/store/struct.Store.html\" title=\"struct wasmtime::store::Store\"><code>Store</code></a> instantiation because the items\ndefined within this store will belong to the <code>store</code> provided, and only\nthe <code>store</code> provided.</p>\n<h5 id=\"errors-2\"><a href=\"#errors-2\">Errors</a></h5>\n<p>Returns an error if the any item is redefined twice in this linker (for\nexample the same <code>module_name</code> was already defined) and shadowing is\ndisallowed, or if <code>instance</code> comes from a different\n<a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/store/struct.Store.html\" title=\"struct wasmtime::store::Store\"><code>Store</code></a> than this <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html\" title=\"struct wasmtime::linker::Linker\"><code>Linker</code></a> originally was created\nwith.</p>\n<h5 id=\"panics\"><a href=\"#panics\">Panics</a></h5>\n<p>Panics if <code>instance</code> does not belong to <code>store</code>.</p>\n<h5 id=\"examples-5\"><a href=\"#examples-5\">Examples</a></h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>linker = Linker::new(<span class=\"kw-2\">&amp;</span>engine);\n\n<span class=\"comment\">// Instantiate a small instance...\n</span><span class=\"kw\">let </span>wat = <span class=\"string\">r#\"(module (func (export \"run\") ))\"#</span>;\n<span class=\"kw\">let </span>module = Module::new(<span class=\"kw-2\">&amp;</span>engine, wat)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>instance = linker.instantiate(<span class=\"kw-2\">&amp;mut </span>store, <span class=\"kw-2\">&amp;</span>module)<span class=\"question-mark\">?</span>;\n\n<span class=\"comment\">// ... and inform the linker that the name of this instance is\n// `instance1`. This defines the `instance1::run` name for our next\n// module to use.\n</span>linker.instance(<span class=\"kw-2\">&amp;mut </span>store, <span class=\"string\">\"instance1\"</span>, instance)<span class=\"question-mark\">?</span>;\n\n<span class=\"kw\">let </span>wat = <span class=\"string\">r#\"\n    (module\n        (import \"instance1\" \"run\" (func $instance1_run))\n        (func (export \"run\")\n            call $instance1_run\n        )\n    )\n\"#</span>;\n<span class=\"kw\">let </span>module = Module::new(<span class=\"kw-2\">&amp;</span>engine, wat)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>instance = linker.instantiate(<span class=\"kw-2\">&amp;mut </span>store, <span class=\"kw-2\">&amp;</span>module)<span class=\"question-mark\">?</span>;</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.module\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/wasmtime/15.0.0/src/wasmtime/linker.rs.html#758-765\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html#tymethod.module\" class=\"fn\">module</a>(\n    &amp;mut self,\n    store: impl <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/store/context/trait.AsContextMut.html\" title=\"trait wasmtime::store::context::AsContextMut\">AsContextMut</a>&lt;Data = T&gt;,\n    module_name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n    module: &amp;<a class=\"struct\" href=\"spin_core/struct.Module.html\" title=\"struct spin_core::Module\">Module</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;mut <a class=\"struct\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html\" title=\"struct wasmtime::linker::Linker\">Linker</a>&lt;T&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;<div class=\"where\">where\n    T: 'static,</div></h4></section></summary><div class=\"docblock\"><p>Define automatic instantiations of a <a href=\"spin_core/struct.Module.html\" title=\"struct spin_core::Module\"><code>Module</code></a> in this linker.</p>\n<p>This automatically handles <a href=\"https://github.com/WebAssembly/WASI/blob/main/legacy/application-abi.md#current-unstable-abi\">Commands and Reactors</a> instantiation and\ninitialization.</p>\n<p>Exported functions of a Command module may be called directly, however\ninstead of having a single instance which is reused for each call,\neach call creates a new instance, which lives for the duration of the\ncall. The imports of the Command are resolved once, and reused for\neach instantiation, so all dependencies need to be present at the time\nwhen <code>Linker::module</code> is called.</p>\n<p>For Reactors, a single instance is created, and an initialization\nfunction is called, and then its exports may be called.</p>\n<p>Ordinary modules which donโt declare themselves to be either Commands\nor Reactors are treated as Reactors without any initialization calls.</p>\n<h5 id=\"errors-3\"><a href=\"#errors-3\">Errors</a></h5>\n<p>Returns an error if the any item is redefined twice in this linker (for\nexample the same <code>module_name</code> was already defined) and shadowing is\ndisallowed, if <code>instance</code> comes from a different\n<a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/store/struct.Store.html\" title=\"struct wasmtime::store::Store\"><code>Store</code></a> than this <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html\" title=\"struct wasmtime::linker::Linker\"><code>Linker</code></a> originally was created\nwith, or if a Reactor initialization function traps.</p>\n<h5 id=\"panics-1\"><a href=\"#panics-1\">Panics</a></h5>\n<p>Panics if any item used to instantiate the provided <a href=\"spin_core/struct.Module.html\" title=\"struct spin_core::Module\"><code>Module</code></a> is not\nowned by <code>store</code>, or if the <code>store</code> provided comes from a different\n<a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/engine/struct.Engine.html\" title=\"struct wasmtime::engine::Engine\"><code>Engine</code></a> than this <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html\" title=\"struct wasmtime::linker::Linker\"><code>Linker</code></a>.</p>\n<h5 id=\"examples-6\"><a href=\"#examples-6\">Examples</a></h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>linker = Linker::new(<span class=\"kw-2\">&amp;</span>engine);\n\n<span class=\"comment\">// Instantiate a small instance and inform the linker that the name of\n// this instance is `instance1`. This defines the `instance1::run` name\n// for our next module to use.\n</span><span class=\"kw\">let </span>wat = <span class=\"string\">r#\"(module (func (export \"run\") ))\"#</span>;\n<span class=\"kw\">let </span>module = Module::new(<span class=\"kw-2\">&amp;</span>engine, wat)<span class=\"question-mark\">?</span>;\nlinker.module(<span class=\"kw-2\">&amp;mut </span>store, <span class=\"string\">\"instance1\"</span>, <span class=\"kw-2\">&amp;</span>module)<span class=\"question-mark\">?</span>;\n\n<span class=\"kw\">let </span>wat = <span class=\"string\">r#\"\n    (module\n        (import \"instance1\" \"run\" (func $instance1_run))\n        (func (export \"run\")\n            call $instance1_run\n        )\n    )\n\"#</span>;\n<span class=\"kw\">let </span>module = Module::new(<span class=\"kw-2\">&amp;</span>engine, wat)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>instance = linker.instantiate(<span class=\"kw-2\">&amp;mut </span>store, <span class=\"kw-2\">&amp;</span>module)<span class=\"question-mark\">?</span>;</code></pre></div>\n<p>For a Command, a new instance is created for each call.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>linker = Linker::new(<span class=\"kw-2\">&amp;</span>engine);\n\n<span class=\"comment\">// Create a Command that attempts to count the number of times it is run, but is\n// foiled by each call getting a new instance.\n</span><span class=\"kw\">let </span>wat = <span class=\"string\">r#\"\n    (module\n        (global $counter (mut i32) (i32.const 0))\n        (func (export \"_start\")\n            (global.set $counter (i32.add (global.get $counter) (i32.const 1)))\n        )\n        (func (export \"read_counter\") (result i32)\n            (global.get $counter)\n        )\n    )\n\"#</span>;\n<span class=\"kw\">let </span>module = Module::new(<span class=\"kw-2\">&amp;</span>engine, wat)<span class=\"question-mark\">?</span>;\nlinker.module(<span class=\"kw-2\">&amp;mut </span>store, <span class=\"string\">\"commander\"</span>, <span class=\"kw-2\">&amp;</span>module)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>run = linker.get_default(<span class=\"kw-2\">&amp;mut </span>store, <span class=\"string\">\"\"</span>)<span class=\"question-mark\">?\n    </span>.typed::&lt;(), ()&gt;(<span class=\"kw-2\">&amp;</span>store)<span class=\"question-mark\">?\n    </span>.clone();\nrun.call(<span class=\"kw-2\">&amp;mut </span>store, ())<span class=\"question-mark\">?</span>;\nrun.call(<span class=\"kw-2\">&amp;mut </span>store, ())<span class=\"question-mark\">?</span>;\nrun.call(<span class=\"kw-2\">&amp;mut </span>store, ())<span class=\"question-mark\">?</span>;\n\n<span class=\"kw\">let </span>wat = <span class=\"string\">r#\"\n    (module\n        (import \"commander\" \"_start\" (func $commander_start))\n        (import \"commander\" \"read_counter\" (func $commander_read_counter (result i32)))\n        (func (export \"run\") (result i32)\n            call $commander_start\n            call $commander_start\n            call $commander_start\n            call $commander_read_counter\n        )\n    )\n\"#</span>;\n<span class=\"kw\">let </span>module = Module::new(<span class=\"kw-2\">&amp;</span>engine, wat)<span class=\"question-mark\">?</span>;\nlinker.module(<span class=\"kw-2\">&amp;mut </span>store, <span class=\"string\">\"\"</span>, <span class=\"kw-2\">&amp;</span>module)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>run = linker.get(<span class=\"kw-2\">&amp;mut </span>store, <span class=\"string\">\"\"</span>, <span class=\"string\">\"run\"</span>).unwrap().into_func().unwrap();\n<span class=\"kw\">let </span>count = run.typed::&lt;(), i32&gt;(<span class=\"kw-2\">&amp;</span>store)<span class=\"question-mark\">?</span>.call(<span class=\"kw-2\">&amp;mut </span>store, ())<span class=\"question-mark\">?</span>;\n<span class=\"macro\">assert_eq!</span>(count, <span class=\"number\">0</span>, <span class=\"string\">\"a Command should get a fresh instance on each invocation\"</span>);\n</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.module_async\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/wasmtime/15.0.0/src/wasmtime/linker.rs.html#829-836\">source</a><h4 class=\"code-header\">pub async fn <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html#tymethod.module_async\" class=\"fn\">module_async</a>(\n    &amp;mut self,\n    store: impl <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/store/context/trait.AsContextMut.html\" title=\"trait wasmtime::store::context::AsContextMut\">AsContextMut</a>&lt;Data = T&gt;,\n    module_name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n    module: &amp;<a class=\"struct\" href=\"spin_core/struct.Module.html\" title=\"struct spin_core::Module\">Module</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;mut <a class=\"struct\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html\" title=\"struct wasmtime::linker::Linker\">Linker</a>&lt;T&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,</div></h4></section></summary><div class=\"docblock\"><p>Define automatic instantiations of a <a href=\"spin_core/struct.Module.html\" title=\"struct spin_core::Module\"><code>Module</code></a> in this linker.</p>\n<p>This is the same as <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html#method.module\" title=\"method wasmtime::linker::Linker::module\"><code>Linker::module</code></a>, except for async <code>Store</code>s.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.alias\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/wasmtime/15.0.0/src/wasmtime/linker.rs.html#953-959\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html#tymethod.alias\" class=\"fn\">alias</a>(\n    &amp;mut self,\n    module: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n    name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n    as_module: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n    as_name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;mut <a class=\"struct\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html\" title=\"struct wasmtime::linker::Linker\">Linker</a>&lt;T&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Aliases one itemโs name as another.</p>\n<p>This method will alias an item with the specified <code>module</code> and <code>name</code>\nunder a new name of <code>as_module</code> and <code>as_name</code>.</p>\n<h5 id=\"errors-4\"><a href=\"#errors-4\">Errors</a></h5>\n<p>Returns an error if any shadowing violations happen while defining new\nitems, or if the original item wasnโt defined.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.alias_module\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/wasmtime/15.0.0/src/wasmtime/linker.rs.html#978\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html#tymethod.alias_module\" class=\"fn\">alias_module</a>(\n    &amp;mut self,\n    module: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n    as_module: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Aliases one moduleโs name as another.</p>\n<p>This method will alias all currently defined under <code>module</code> to also be\ndefined under the name <code>as_module</code> too.</p>\n<h5 id=\"errors-5\"><a href=\"#errors-5\">Errors</a></h5>\n<p>Returns an error if any shadowing violations happen while defining new\nitems.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.instantiate\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/wasmtime/15.0.0/src/wasmtime/linker.rs.html#1089-1093\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html#tymethod.instantiate\" class=\"fn\">instantiate</a>(\n    &amp;self,\n    store: impl <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/store/context/trait.AsContextMut.html\" title=\"trait wasmtime::store::context::AsContextMut\">AsContextMut</a>&lt;Data = T&gt;,\n    module: &amp;<a class=\"struct\" href=\"spin_core/struct.Module.html\" title=\"struct spin_core::Module\">Module</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"spin_core/struct.ModuleInstance.html\" title=\"struct spin_core::ModuleInstance\">Instance</a>, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to instantiate the <code>module</code> provided.</p>\n<p>This method will attempt to assemble a list of imports that correspond\nto the imports required by the <a href=\"spin_core/struct.Module.html\" title=\"struct spin_core::Module\"><code>Module</code></a> provided. This list\nof imports is then passed to <a href=\"spin_core/struct.ModuleInstance.html#method.new\" title=\"associated function spin_core::ModuleInstance::new\"><code>Instance::new</code></a> to continue the\ninstantiation process.</p>\n<p>Each import of <code>module</code> will be looked up in this <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html\" title=\"struct wasmtime::linker::Linker\"><code>Linker</code></a> and must\nhave previously been defined. If it was previously defined with an\nincorrect signature or if it was not previously defined then an error\nwill be returned because the import can not be satisfied.</p>\n<p>Per the WebAssembly spec, instantiation includes running the moduleโs\nstart function, if it has one (not to be confused with the <code>_start</code>\nfunction, which is not run).</p>\n<h5 id=\"errors-6\"><a href=\"#errors-6\">Errors</a></h5>\n<p>This method can fail because an import may not be found, or because\ninstantiation itself may fail. For information on instantiation\nfailures see <a href=\"spin_core/struct.ModuleInstance.html#method.new\" title=\"associated function spin_core::ModuleInstance::new\"><code>Instance::new</code></a>. If an import is not found, the error\nmay be downcast to an <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.UnknownImportError.html\" title=\"struct wasmtime::linker::UnknownImportError\"><code>UnknownImportError</code></a>.</p>\n<h5 id=\"panics-2\"><a href=\"#panics-2\">Panics</a></h5>\n<p>Panics if any item used to instantiate <code>module</code> is not owned by\n<code>store</code>. Additionally this will panic if the <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/engine/struct.Engine.html\" title=\"struct wasmtime::engine::Engine\"><code>Engine</code></a> that the <code>store</code>\nbelongs to is different than this <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html\" title=\"struct wasmtime::linker::Linker\"><code>Linker</code></a>.</p>\n<h5 id=\"examples-7\"><a href=\"#examples-7\">Examples</a></h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>linker = Linker::new(<span class=\"kw-2\">&amp;</span>engine);\nlinker.func_wrap(<span class=\"string\">\"host\"</span>, <span class=\"string\">\"double\"</span>, |x: i32| x * <span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"kw\">let </span>wat = <span class=\"string\">r#\"\n    (module\n        (import \"host\" \"double\" (func (param i32) (result i32)))\n    )\n\"#</span>;\n<span class=\"kw\">let </span>module = Module::new(<span class=\"kw-2\">&amp;</span>engine, wat)<span class=\"question-mark\">?</span>;\nlinker.instantiate(<span class=\"kw-2\">&amp;mut </span>store, <span class=\"kw-2\">&amp;</span>module)<span class=\"question-mark\">?</span>;</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.instantiate_async\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/wasmtime/15.0.0/src/wasmtime/linker.rs.html#1102-1108\">source</a><h4 class=\"code-header\">pub async fn <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html#tymethod.instantiate_async\" class=\"fn\">instantiate_async</a>(\n    &amp;self,\n    store: impl <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/store/context/trait.AsContextMut.html\" title=\"trait wasmtime::store::context::AsContextMut\">AsContextMut</a>&lt;Data = T&gt;,\n    module: &amp;<a class=\"struct\" href=\"spin_core/struct.Module.html\" title=\"struct spin_core::Module\">Module</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"spin_core/struct.ModuleInstance.html\" title=\"struct spin_core::ModuleInstance\">Instance</a>, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h4></section></summary><div class=\"docblock\"><p>Attempts to instantiate the <code>module</code> provided. This is the same as\n<a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html#method.instantiate\" title=\"method wasmtime::linker::Linker::instantiate\"><code>Linker::instantiate</code></a>, except for async <code>Store</code>s.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.instantiate_pre\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/wasmtime/15.0.0/src/wasmtime/linker.rs.html#1162\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html#tymethod.instantiate_pre\" class=\"fn\">instantiate_pre</a>(&amp;self, module: &amp;<a class=\"struct\" href=\"spin_core/struct.Module.html\" title=\"struct spin_core::Module\">Module</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/instance/struct.InstancePre.html\" title=\"struct wasmtime::instance::InstancePre\">InstancePre</a>&lt;T&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Performs all checks necessary for instantiating <code>module</code> with this\nlinker, except that instantiation doesnโt actually finish.</p>\n<p>This method is used for front-loading type-checking information as well\nas collecting the imports to use to instantiate a module with. The\nreturned <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/instance/struct.InstancePre.html\" title=\"struct wasmtime::instance::InstancePre\"><code>InstancePre</code></a> represents a ready-to-be-instantiated module,\nwhich can also be instantiated multiple times if desired.</p>\n<h5 id=\"errors-7\"><a href=\"#errors-7\">Errors</a></h5>\n<p>Returns an error which may be downcast to an <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.UnknownImportError.html\" title=\"struct wasmtime::linker::UnknownImportError\"><code>UnknownImportError</code></a> if\nthe module has any unresolvable imports.</p>\n<h5 id=\"examples-8\"><a href=\"#examples-8\">Examples</a></h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>linker = Linker::new(<span class=\"kw-2\">&amp;</span>engine);\nlinker.func_wrap(<span class=\"string\">\"host\"</span>, <span class=\"string\">\"double\"</span>, |x: i32| x * <span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"kw\">let </span>wat = <span class=\"string\">r#\"\n    (module\n        (import \"host\" \"double\" (func (param i32) (result i32)))\n    )\n\"#</span>;\n<span class=\"kw\">let </span>module = Module::new(<span class=\"kw-2\">&amp;</span>engine, wat)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>instance_pre = linker.instantiate_pre(<span class=\"kw-2\">&amp;</span>module)<span class=\"question-mark\">?</span>;\n\n<span class=\"comment\">// Finish instantiation after the type-checking has all completed...\n</span><span class=\"kw\">let </span>instance = instance_pre.instantiate(<span class=\"kw-2\">&amp;mut </span>store)<span class=\"question-mark\">?</span>;\n\n<span class=\"comment\">// ... and we can even continue to keep instantiating if desired!\n</span>instance_pre.instantiate(<span class=\"kw-2\">&amp;mut </span>store)<span class=\"question-mark\">?</span>;\ninstance_pre.instantiate(<span class=\"kw-2\">&amp;mut </span>store)<span class=\"question-mark\">?</span>;\n\n<span class=\"comment\">// Note that functions defined in a linker with `func_wrap` and similar\n// constructors are not owned by any particular `Store`, so we can also\n// instantiate our `instance_pre` in other stores because no imports\n// belong to the original store.\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>new_store = Store::new(<span class=\"kw-2\">&amp;</span>engine, ());\ninstance_pre.instantiate(<span class=\"kw-2\">&amp;mut </span>new_store)<span class=\"question-mark\">?</span>;</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/wasmtime/15.0.0/src/wasmtime/linker.rs.html#1208-1211\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html#tymethod.iter\" class=\"fn\">iter</a>&lt;'a, 'p&gt;(\n    &amp;'a self,\n    store: impl <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/store/context/trait.AsContextMut.html\" title=\"trait wasmtime::store::context::AsContextMut\">AsContextMut</a>&lt;Data = T&gt; + 'p\n) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = (&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>, &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>, <a class=\"enum\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/externals/enum.Extern.html\" title=\"enum wasmtime::externals::Extern\">Extern</a>)&gt; + 'p<div class=\"where\">where\n    'a: 'p,</div></h4></section></summary><div class=\"docblock\"><p>Returns an iterator over all items defined in this <code>Linker</code>, in\narbitrary order.</p>\n<p>The iterator returned will yield 3-tuples where the first two elements\nare the module name and item name for the external item, and the third\nitem is the item itself that is defined.</p>\n<p>Note that multiple <code>Extern</code> items may be defined for the same\nmodule/name pair.</p>\n<h5 id=\"panics-3\"><a href=\"#panics-3\">Panics</a></h5>\n<p>This function will panic if the <code>store</code> provided does not come from the\nsame <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/engine/struct.Engine.html\" title=\"struct wasmtime::engine::Engine\"><code>Engine</code></a> that this linker was created with.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/wasmtime/15.0.0/src/wasmtime/linker.rs.html#1233-1238\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html#tymethod.get\" class=\"fn\">get</a>(\n    &amp;self,\n    store: impl <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/store/context/trait.AsContextMut.html\" title=\"trait wasmtime::store::context::AsContextMut\">AsContextMut</a>&lt;Data = T&gt;,\n    module: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n    name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/externals/enum.Extern.html\" title=\"enum wasmtime::externals::Extern\">Extern</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Looks up a previously defined value in this <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html\" title=\"struct wasmtime::linker::Linker\"><code>Linker</code></a>, identified by\nthe names provided.</p>\n<p>Returns <code>None</code> if this name was not previously defined in this\n<a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html\" title=\"struct wasmtime::linker::Linker\"><code>Linker</code></a>.</p>\n<h5 id=\"panics-4\"><a href=\"#panics-4\">Panics</a></h5>\n<p>This function will panic if the <code>store</code> provided does not come from the\nsame <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/engine/struct.Engine.html\" title=\"struct wasmtime::engine::Engine\"><code>Engine</code></a> that this linker was created with.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_by_import\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/wasmtime/15.0.0/src/wasmtime/linker.rs.html#1261-1265\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html#tymethod.get_by_import\" class=\"fn\">get_by_import</a>(\n    &amp;self,\n    store: impl <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/store/context/trait.AsContextMut.html\" title=\"trait wasmtime::store::context::AsContextMut\">AsContextMut</a>&lt;Data = T&gt;,\n    import: &amp;<a class=\"struct\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/types/struct.ImportType.html\" title=\"struct wasmtime::types::ImportType\">ImportType</a>&lt;'_&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/externals/enum.Extern.html\" title=\"enum wasmtime::externals::Extern\">Extern</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Looks up a value in this <code>Linker</code> which matches the <code>import</code> type\nprovided.</p>\n<p>Returns <code>None</code> if no match was found.</p>\n<h5 id=\"panics-5\"><a href=\"#panics-5\">Panics</a></h5>\n<p>This function will panic if the <code>store</code> provided does not come from the\nsame <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/engine/struct.Engine.html\" title=\"struct wasmtime::engine::Engine\"><code>Engine</code></a> that this linker was created with.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_default\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/wasmtime/15.0.0/src/wasmtime/linker.rs.html#1288-1292\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html#tymethod.get_default\" class=\"fn\">get_default</a>(\n    &amp;self,\n    store: impl <a class=\"trait\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/store/context/trait.AsContextMut.html\" title=\"trait wasmtime::store::context::AsContextMut\">AsContextMut</a>&lt;Data = T&gt;,\n    module: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/func/struct.Func.html\" title=\"struct wasmtime::func::Func\">Func</a>, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the โdefault exportโ of a module.</p>\n<p>An export with an empty string is considered to be a โdefault exportโ.\nโ_startโ is also recognized for compatibility.</p>\n<h5 id=\"panics-6\"><a href=\"#panics-6\">Panics</a></h5>\n<p>Panics if the default function found is not owned by <code>store</code>. This\nfunction will also panic if the <code>store</code> provided does not come from the\nsame <a href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/engine/struct.Engine.html\" title=\"struct wasmtime::engine::Engine\"><code>Engine</code></a> that this linker was created with.</p>\n</div></details></div></details>",0,"spin_core::ModuleLinker"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Linker%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/wasmtime/15.0.0/src/wasmtime/linker.rs.html#94\">source</a><a href=\"#impl-Clone-for-Linker%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html\" title=\"struct wasmtime::linker::Linker\">Linker</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/wasmtime/15.0.0/src/wasmtime/linker.rs.html#95\">source</a><a href=\"#method.clone\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html\" title=\"struct wasmtime::linker::Linker\">Linker</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","spin_core::ModuleLinker"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-Linker%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/wasmtime/15.0.0/src/wasmtime/linker.rs.html#1313\">source</a><a href=\"#impl-Default-for-Linker%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html\" title=\"struct wasmtime::linker::Linker\">Linker</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/wasmtime/15.0.0/src/wasmtime/linker.rs.html#1314\">source</a><a href=\"#method.default\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"https://docs.rs/wasmtime/15.0.0/wasmtime/linker/struct.Linker.html\" title=\"struct wasmtime::linker::Linker\">Linker</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns the โdefault valueโ for a type. <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","spin_core::ModuleLinker"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()