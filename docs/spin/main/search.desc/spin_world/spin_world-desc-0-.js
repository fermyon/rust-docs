searchState.loadedDescShard("spin_world", 0, "Auto-generated bindings for an instance a component which …\nAuto-generated bindings for index of the exports of <code>host</code>.\nAuto-generated bindings for a pre-instantiated version of a\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nInstantiates a new instance of <code>Host_</code> within the <code>store</code> …\nConvenience wrapper around <code>Host_Pre::new</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nUses the indices stored in <code>self</code> to load an instance of …\nCreates a new copy of <code>Host_Pre</code> bindings which can then be …\nConvenience wrapper around <code>Host_Indices::new_instance</code> and …\nCreates a new copy of <code>Host_Indices</code> bindings which can then …\nCreates a new instance of <code>Host_Indices</code> from an …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConstructor for <code>GuestIndices</code> which takes a <code>Component</code> as …\nThis constructor is similar to <code>GuestIndices::new</code> except …\nThe entrypoint for a Redis handler.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConstructor for <code>GuestIndices</code> which takes a <code>Component</code> as …\nThis constructor is similar to <code>GuestIndices::new</code> except …\nThe requesting component does not have access to the …\nThe set of errors which may be raised by functions in this …\nThe host does not recognize the store label requested.\nSome implementation-specific error has occurred (e.g. I/O)\nAn open key-value store\nToo many stores have been opened simultaneously. Closing …\nDelete the tuple with the specified <code>key</code>\nReturn whether a tuple exists for the specified <code>key</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the value associated with the specified <code>key</code>\nReturn a list of all the keys\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nOpen the store with the specified label.\nSet the <code>value</code> associated with the specified <code>key</code> …\nThe model used for generating embeddings\nResult of generating embeddings\nUsage related to an embeddings generation request\nThe set of errors which may be raised by functions in this …\nA Large Language Model.\nInference request parameters\nAn inferencing result\nUsage information related to the inferencing result\nThe embeddings generated by the request\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGenerate embeddings for the supplied list of text\nNumber of tokens generated by the inferencing operation\nPerform inferencing using the provided model and prompt …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe maximum tokens that should be inferred.\nNumber of tokens in the prompt\nNumber of tokens in the prompt\nThe amount the model should avoid repeating tokens.\nThe number of tokens the model should apply the repeat …\nThe randomness with which the next token is selected.\nThe text generated by the model TODO: this should be a …\nThe number of possible next tokens the model will choose …\nThe probability total of next tokens the model will choose …\nUsage information about the inferencing request\nUsage related to the embeddings generation request\nConnection failure e.g. address not allowed.\nErrors related to interacting with Mqtt\nAn invalid address string\nSome other error occurred\nThe message payload.\nQoS for publishing Mqtt messages\nThere are too many open connections\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nOpen a connection to the Mqtt instance at <code>address</code>.\nPublish an Mqtt message to the specified <code>topic</code>.\nA connection to a MySQL database.\nexecute command to the database: insert, update, delete\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nOpen a connection to the MySQL instance at <code>address</code>.\nquery the database: select\nA connection to a postgres database.\nExecute command to the database.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nOpen a connection to the Postgres instance at <code>address</code>.\nQuery the database.\nA database column\nData types for a database column\nDatabase values\nErrors related to interacting with a database.\nValues used in parameterized queries\nA database row\nA set of database rows\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nErrors related to interacting with Redis\nAn invalid address string\nSome other error occurred\nThe message payload.\nA parameter type for the general-purpose <code>execute</code> function.\nA return type for the general-purpose <code>execute</code> function.\nThere are too many open connections\nA retrieved value was not of the correct type\nRemoves the specified keys.\nExecute an arbitrary Redis command and receive the result.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the value of a key.\nIncrements the number stored at key by one.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nOpen a connection to the Redis instance at <code>address</code>.\nPublish a Redis message to the specified channel.\nAdd the specified <code>values</code> to the set named <code>key</code>, returning …\nSet key to value.\nRetrieve the contents of the set named <code>key</code>.\nRemove the specified <code>values</code> from the set named <code>key</code>, …\nThe requesting component does not have access to the …\nA handle to an open sqlite instance\nThe database has reached its capacity\nThe set of errors which may be raised by functions in this …\nThe provided connection is not valid\nSome implementation-specific error has occurred (e.g. I/O)\nThe host does not recognize the database name requested.\nA result of a query\nA set of values for each of the columns in a query-result\nA single column’s result from a database query\nThe names of the columns retrieved in the query\nExecute a statement returning back data if there is any\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nOpen a connection to a named database instance.\nthe row results each containing the values for all the …\nThe set of errors which may be raised by functions in this …\nThe provided variable name is invalid.\nSome implementation-specific error has occurred.\nA variables provider specific error has occurred.\nThe provided variable is undefined.\nReturns the argument unchanged.\nGet an application variable value for the current …\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a configuration value for the current component. The …\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe requesting component does not have access to the …\nThe set of errors which may be raised by functions in this …\nThe store handle provided is not recognized, i.e. it was …\nSome implementation-specific error has occurred (e.g. I/O)\nNo key-value tuple exists for the specified key in the …\nThe host does not recognize the store name requested.  …\nA handle to an open key-value store\nToo many stores have been opened simultaneously. Closing …\nClose the specified <code>store</code>.\nDelete the tuple with the specified <code>key</code> from the specified …\nReturn whether a tuple exists for the specified <code>key</code> in the …\nReturns the argument unchanged.\nGet the value associated with the specified <code>key</code> from the …\nReturn a list of all the keys in the specified <code>store</code>.\nCalls <code>U::from(self)</code>.\nOpen the store with the specified name.\nSet the <code>value</code> associated with the specified <code>key</code> in the …\nThe model used for generating embeddings\nResult of generating embeddings\nUsage related to an embeddings generation request\nThe set of errors which may be raised by functions in this …\nA Large Language Model.\nInference request parameters\nAn inferencing result\nUsage information related to the inferencing result\nThe embeddings generated by the request\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGenerate embeddings for the supplied list of text\nNumber of tokens generated by the inferencing operation\nPerform inferencing using the provided model and prompt …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe maximum tokens that should be inferred.\nNumber of tokens in the prompt\nNumber of tokens in the prompt\nThe amount the model should avoid repeating tokens.\nThe number of tokens the model should apply the repeat …\nThe randomness with which the next token is selected.\nThe text generated by the model TODO: this should be a …\nThe number of possible next tokens the model will choose …\nThe probability total of next tokens the model will choose …\nUsage information about the inferencing request\nUsage related to the embeddings generation request\nGeneral purpose error.\nexecute command to the database: insert, update, delete\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nquery the database: select\nGeneral purpose error.\nexecute command to the database: insert, update, delete\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nquery the database: select\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRemoves the specified keys. A key is ignored if it does …\nExecute an arbitrary Redis command and receive the result.\nGet the value of a key.\nIncrements the number stored at key by one. If the key …\nPublish a Redis message to the specificed channel and …\nAdd the specified <code>values</code> to the set named <code>key</code>, returning …\nSet key to value. If key alreads holds a value, it is …\nRetrieve the contents of the set named <code>key</code>.\nRemove the specified <code>values</code> from the set named <code>key</code>, …\nGeneral purpose error.\nThe message payload.\nA parameter type for the general-purpose <code>execute</code> function.\nA return type for the general-purpose <code>execute</code> function.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe requesting component does not have access to the …\nA handle to an open sqlite instance\nThe database has reached its capacity\nThe set of errors which may be raised by functions in this …\nThe provided connection is not valid\nSome implementation-specific error has occurred (e.g. I/O)\nThe host does not recognize the database name requested.\nA result of a query\nA set of values for each of the columns in a query-result\nClose the specified <code>connection</code>.\nThe names of the columns retrieved in the query\nExecute a statement returning back data if there is any\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nOpen a connection to a named database instance.\nthe row results each containing the values for all the …\nA database column\nA connection to a postgres database.\n(hour, minute, second, nanosecond) Date-time types are …\n(hour, minute, second, nanosecond) Date-time types are …\nData types for a database column\nDatabase values\nErrors related to interacting with a database.\nValues used in parameterized queries\nA database row\nA set of database rows\n(year, month, day)\n(year, month, day)\nUnix timestamp (seconds since epoch)\nUnix timestamp (seconds since epoch)\nExecute command to the database.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nOpen a connection to the Postgres instance at <code>address</code>.\nQuery the database.\nGet the POSIX-style arguments to the program.\nGet the POSIX-style environment variables.\nReturn a path that programs should use as their initial …\nExit the current instance and any linked instances.\nThe input side of a terminal.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe output side of a terminal.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nIf stderr is connected to a terminal, return a …\nIf stdin is connected to a terminal, return a …\nIf stdout is connected to a terminal, return a …\nA duration of time, in nanoseconds.\nAn instant in time, in nanoseconds. An instant is relative …\nRead the current value of the clock.\nQuery the resolution of the clock. Returns the duration of …\nCreate a <code>pollable</code> which will resolve once the given …\nCreate a <code>pollable</code> which will resolve once the specified …\nA time and date in seconds plus nanoseconds.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nRead the current value of the clock.\nQuery the resolution of the clock.\nAn error type that encapsulates the different errors that …\nThis indicates an error from an I/O operation. As this …\nThis indicates an error from an “upstream” config …\nReturns the argument unchanged.\nGets a configuration value of type <code>string</code> associated with …\nGets a list of configuration key-value pairs of type <code>string</code>…\nCalls <code>U::from(self)</code>.\nReturn the set of preopened directories, and their path.\nPermission denied, similar to <code>EACCES</code> in POSIX.\nFile or memory access pattern advisory information.\nConnection already in progress, similar to <code>EALREADY</code> in …\nBad descriptor, similar to <code>EBADF</code> in POSIX.\nThe descriptor refers to a block device inode.\nDevice or resource busy, similar to <code>EBUSY</code> in POSIX.\nThe descriptor refers to a character device inode.\nCross-device link, similar to <code>EXDEV</code> in POSIX.\nResource deadlock would occur, similar to <code>EDEADLK</code> in POSIX.\nA descriptor is a reference to a filesystem object, which …\nFile attributes.\nThe type of a filesystem object referenced by a descriptor.\nThe descriptor refers to a directory inode.\nA directory entry.\nA stream of directory entries.\nThe application expects that it will not access the …\nError codes returned by functions, similar to <code>errno</code> in …\nFile exists, similar to <code>EEXIST</code> in POSIX.\nThe descriptor refers to a named pipe.\nFile too large, similar to <code>EFBIG</code> in POSIX.\nFile size or length of a region within a file.\nIllegal byte sequence, similar to <code>EILSEQ</code> in POSIX.\nOperation in progress, similar to <code>EINPROGRESS</code> in POSIX.\nNot enough space, similar to <code>ENOMEM</code> in POSIX.\nNo space left on device, similar to <code>ENOSPC</code> in POSIX.\nInterrupted function, similar to <code>EINTR</code> in POSIX.\nInvalid argument, similar to <code>EINVAL</code> in POSIX.\nInvalid seek, similar to <code>ESPIPE</code> in POSIX.\nI/O error, similar to <code>EIO</code> in POSIX.\nIs a directory, similar to <code>EISDIR</code> in POSIX.\nNumber of hard links to an inode.\nToo many levels of symbolic links, similar to <code>ELOOP</code> in …\nMessage too large, similar to <code>EMSGSIZE</code> in POSIX.\nA 128-bit hash value, split into parts because wasm doesn…\nFilename too long, similar to <code>ENAMETOOLONG</code> in POSIX.\nWhen setting a timestamp, this gives the value to set it …\nLeave the timestamp set to its previous value.\nNo such device, similar to <code>ENODEV</code> in POSIX.\nNo such file or directory, similar to <code>ENOENT</code> in POSIX.\nNo locks available, similar to <code>ENOLCK</code> in POSIX.\nThe application expects to access the specified data once …\nNo such device or address, similar to <code>ENXIO</code> in POSIX.\nInappropriate I/O control operation, similar to <code>ENOTTY</code> in …\nThe application has no advice to give on its behavior with …\nNot a directory or a symbolic link to a directory, similar …\nDirectory not empty, similar to <code>ENOTEMPTY</code> in POSIX.\nOperation not permitted, similar to <code>EPERM</code> in POSIX.\nState not recoverable, similar to <code>ENOTRECOVERABLE</code> in POSIX.\nSet the timestamp to the current time of the system clock …\nValue too large to be stored in data type, similar to …\nBroken pipe, similar to <code>EPIPE</code> in POSIX.\nStorage quota exceeded, similar to <code>EDQUOT</code> in POSIX.\nThe application expects to access the specified data in a …\nRead-only file system, similar to <code>EROFS</code> in POSIX.\nThe descriptor refers to a regular file inode.\nThe application expects to access the specified data …\nThe descriptor refers to a socket.\nThe file refers to a symbolic link inode.\nText file busy, similar to <code>ETXTBSY</code> in POSIX.\nSet the timestamp to the given value.\nToo many links, similar to <code>EMLINK</code> in POSIX.\nThe type of the descriptor or file is unknown or is …\nNot supported, similar to <code>ENOTSUP</code> and <code>ENOSYS</code> in POSIX.\nThe application expects to access the specified data in …\nResource unavailable, or operation would block, similar to …\nProvide file advisory information on a descriptor.\nReturn a stream for appending to a file, if available.\nCreate a directory.\nLast data access timestamp.\nLast data modification timestamp.\nAttempts to extract a filesystem-related <code>error-code</code> from …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet flags associated with a descriptor.\nGet the dynamic type of a descriptor.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTest whether two descriptors refer to the same filesystem …\nCreate a hard link.\nNumber of hard links to the file.\n64 bits of a 128-bit hash value.\nReturn a hash of the metadata associated with a filesystem …\nReturn a hash of the metadata associated with a filesystem …\nThe name of the object.\nOpen a file or directory.\nRead from a descriptor, without using and updating the …\nRead directory entries from a directory.\nRead a single directory entry from a <code>directory-entry-stream</code>…\nReturn a stream for reading from a file, if available.\nRead the contents of a symbolic link.\nRemove a directory.\nRename a filesystem object.\nAdjust the size of an open file. If this increases the file…\nAdjust the timestamps of an open file or directory.\nAdjust the timestamps of a file or directory.\nFor regular files, the file size in bytes. For symbolic …\nReturn the attributes of an open file or directory.\nReturn the attributes of a file or directory.\nLast file status-change timestamp.\nCreate a symbolic link (also known as a “symlink”).\nSynchronize the data and metadata of a file to disk.\nSynchronize the data of a file to disk.\nFile type.\nThe type of the file referred to by this directory entry.\nUnlink a filesystem object that is not a directory.\nAnother 64 bits of a 128-bit hash value.\nWrite to a descriptor, without using and updating the …\nReturn a stream for writing to a file, if available.\nThis is a catch-all error for anything that doesn’t fit …\nThis function is invoked with an outgoing HTTP Request, …\nDefines the case payload type for <code>DNS-error</code> above:\nThese cases are inspired by the IANA HTTP Proxy Error …\nField keys are always strings.\nDefines the case payload type for …\nField values should always be ASCII strings. However, in …\nThis following block defines the <code>fields</code> resource which …\nThis error indicates that a forbidden <code>field-key</code> was used …\nRepresents a future which may eventaully return an …\nRepresents a future which may eventaully return trailers, …\nThis type enumerates the different kinds of errors that …\nHeaders is an alias for Fields.\nThis error indicates that the operation on the <code>fields</code> was …\nRepresents an incoming HTTP Request or Response’s Body.\nRepresents an incoming HTTP Request.\nRepresents an incoming HTTP Response.\nThis is a catch-all error for anything that doesn’t fit …\nThis error indicates that a <code>field-key</code> or <code>field-value</code> was …\nThis type corresponds to HTTP standard Methods.\nRepresents an outgoing HTTP Request or Response’s Body.\nRepresents an outgoing HTTP Request.\nRepresents an outgoing HTTP Response.\nParameters for making an HTTP Request. Each of these …\nRepresents the ability to send an HTTP Response.\nThis type corresponds to HTTP standard Related Schemes.\nThis type corresponds to the HTTP standard Status Code.\nDefines the case payload type for <code>TLS-alert-received</code> above:\nTrailers is an alias for Fields.\nAppend a value for a key. Does not change or delete any …\nReturns the authority from the request, if it was present.\nGet the HTTP Authority for the Request. A value of <code>none</code> …\nThe timeout for receiving subsequent chunks of bytes in …\nReturns the resource corresponding to the outgoing Body …\nReturns the resource corresponding to the outgoing Body …\nMake a deep copy of the Fields. Equivelant in behavior to …\nThe timeout for the initial connect to the HTTP Server.\nGives the <code>incoming-body</code> associated with this request. Will …\nReturns the incoming body. May be called at most once. …\nDelete all values for a key. Does nothing if no values for …\nRetrieve the full set of keys and values in the Fields. …\nTakes ownership of <code>incoming-body</code>, and returns a …\nFinalize an outgoing body, optionally providing trailers. …\nThe timeout for receiving the first byte of the Response …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstruct an HTTP Fields.\nGet all of the values corresponding to a key. If the key …\nReturns the contents of the trailers, or an error which …\nReturns the incoming HTTP Response, or an error, once one …\nReturns <code>true</code> when the key is present in this <code>fields</code>. If …\nGet the <code>headers</code> associated with the request.\nGet the headers associated with the Request.\nReturns the headers from the incoming response.\nGet the headers associated with the Request.\nAttempts to extract a http-related <code>error</code> from the wasi:io …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the method of the incoming request.\nGet the Method for the Request.\nConstruct an empty HTTP Fields.\nConstruct a new <code>outgoing-request</code> with a default <code>method</code> of …\nConstruct a default <code>request-options</code> value.\nConstruct an <code>outgoing-response</code>, with a default <code>status-code</code> …\nReturns the path with query parameters from the request, …\nGet the combination of the HTTP Path and Query for the …\nReturns the protocol scheme from the request.\nGet the HTTP Related Scheme for the Request. When <code>none</code>, the\nSet all of the values for a key. Clears any existing …\nSet the value of the <code>response-outparam</code> to either send a …\nSet the HTTP Authority for the Request. A value of <code>none</code> …\nSet the timeout for receiving subsequent chunks of bytes …\nSet the timeout for the initial connect to the HTTP …\nSet the timeout for receiving the first byte of the …\nSet the Method for the Request. Fails if the string …\nSet the combination of the HTTP Path and Query for the …\nSet the HTTP Related Scheme for the Request. When <code>none</code>, the\nSet the HTTP Status Code for the Response. Fails if the …\nReturns the status code from the incoming response.\nGet the HTTP Status Code for the Response.\nReturns the contents of the body, as a stream of bytes.\nReturns a pollable which becomes ready when either the …\nReturns a pollable which becomes ready when either the …\nReturns a stream for writing the body contents.\nA resource which represents some error information.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns a string that is suitable to assist humans in …\n<code>pollable</code> represents a single I/O event which may be ready, …\n<code>block</code> returns immediately if the pollable is ready, and …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nPoll for completion on a set of pollables.\nReturn the readiness of a pollable. This function never …\nThe stream is closed: no more input will be accepted by the\nAn input bytestream.\nThe last operation (a write or flush) failed before …\nAn output bytestream.\nAn error for input-stream and output-stream operations.\nRequest to flush buffered output, and block until flush …\nRead bytes from a stream, after blocking until at least …\nSkip bytes from a stream, after blocking until at least …\nRead from one stream and write to another, with blocking.\nPerform a write of up to 4096 bytes, and then flush the …\nPerform a write of up to 4096 zeroes, and then flush the …\nCheck readiness for writing. This function never blocks.\nRequest to flush buffered output. This function never …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPerform a non-blocking read from the stream.\nSkip bytes from a stream. Returns number of bytes skipped.\nRead from one stream and write to another.\nCreate a <code>pollable</code> which will resolve once either the …\nCreate a <code>pollable</code> which will resolve once the output-stream\nPerform a write. This function never blocks.\nWrite zeroes to a stream.\nThe requesting component does not have access to the …\nA handle to a CAS (compare-and-swap) operation.\nThe error returned by a CAS operation\nThe CAS operation failed because the value was too old. …\nThe host does not recognize the store identifier requested.\nSome implementation-specific error has occurred (e.g. I/O)\nA store error occurred when performing the operation\nGet the current value of the key (if it exists). This …\nReturns the argument unchanged.\nReturns the argument unchanged.\nAtomically increment the value associated with the key in …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConstruct a new CAS operation. Implementors can map the …\nPerform the swap on a CAS operation. This consumes the CAS …\nThe requesting component does not have access to the …\nThe host does not recognize the store identifier requested.\nSome implementation-specific error has occurred (e.g. I/O)\nDelete the key-value pairs associated with the keys in the …\nGet the key-value pairs associated with the keys in the …\nSet the values associated with the keys in the store. If …\nThe requesting component does not have access to the …\nA bucket is a collection of key-value pairs. Each …\nThe set of errors which may be raised by functions in this …\nA response to a <code>list-keys</code> operation.\nThe host does not recognize the store identifier requested.\nSome implementation-specific error has occurred (e.g. I/O)\nThe continuation token to use to fetch the next page of …\nDelete the key-value pair associated with the key in the …\nCheck if the key exists in the store.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the value associated with the specified <code>key</code>\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe list of keys returned by the query.\nGet all the keys in the store with an optional cursor (for …\nGet the bucket with the specified identifier.\nSet the value associated with the key in the store. If the …\nReturn <code>len</code> insecure pseudo-random bytes.\nReturn an insecure pseudo-random <code>u64</code> value.\nReturn a 128-bit value that may contain a pseudo-random …\nReturn <code>len</code> cryptographically-secure random or …\nReturn a cryptographically-secure random or pseudo-random …\nGet a handle to the default network.\nAccess denied.\nA bind operation failed because the provided address is …\nA bind operation failed because the provided address is …\nThis operation is incompatible with another asynchronous …\nA TCP connection was aborted.\nThe TCP connection was forcefully rejected\nThe TCP connection was reset.\nThe size of a datagram sent to a UDP socket exceeded the …\nOne of the arguments is invalid.\nThe operation is not valid in the socket’s current state.\nName does not exist or has no suitable associated IP …\nA new socket resource could not be created because of a …\nTrying to finish an asynchronous operation that:\nThe operation is not supported.\nNot enough memory to complete the operation.\nA permanent failure in name resolution occurred.\nThe remote address is not reachable\nA temporary failure in name resolution occurred.\nThe operation timed out before it could finish completely.\nUnknown error\nThe operation has been aborted because it could not be …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nResolve an internet host name to a list of IP addresses.\nReturns the next address from the resolver.\nCreate a <code>pollable</code> which will resolve once the stream is …\nAccess denied.\nA bind operation failed because the provided address is …\nA bind operation failed because the provided address is …\nThis operation is incompatible with another asynchronous …\nA TCP connection was aborted.\nThe TCP connection was forcefully rejected\nThe TCP connection was reset.\nThe size of a datagram sent to a UDP socket exceeded the …\nError codes.\nOne of the arguments is invalid.\nThe operation is not valid in the socket’s current state.\nSimilar to <code>AF_INET</code> in POSIX.\nSimilar to <code>AF_INET6</code> in POSIX.\nName does not exist or has no suitable associated IP …\nAn opaque resource that represents access to (a subset of) …\nA new socket resource could not be created because of a …\nTrying to finish an asynchronous operation that:\nThe operation is not supported.\nNot enough memory to complete the operation.\nA permanent failure in name resolution occurred.\nThe remote address is not reachable\nA temporary failure in name resolution occurred.\nThe operation timed out before it could finish completely.\nUnknown error\nThe operation has been aborted because it could not be …\nsin_addr\nsin6_addr\nsin6_flowinfo\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nsin_port\nsin6_port\nsin6_scope_id\nAccess denied.\nA bind operation failed because the provided address is …\nA bind operation failed because the provided address is …\nSimilar to <code>SHUT_RDWR</code> in POSIX.\nThis operation is incompatible with another asynchronous …\nA TCP connection was aborted.\nThe TCP connection was forcefully rejected\nThe TCP connection was reset.\nThe size of a datagram sent to a UDP socket exceeded the …\nOne of the arguments is invalid.\nThe operation is not valid in the socket’s current state.\nSimilar to <code>AF_INET</code> in POSIX.\nSimilar to <code>AF_INET6</code> in POSIX.\nName does not exist or has no suitable associated IP …\nA new socket resource could not be created because of a …\nTrying to finish an asynchronous operation that:\nThe operation is not supported.\nNot enough memory to complete the operation.\nA permanent failure in name resolution occurred.\nSimilar to <code>SHUT_RD</code> in POSIX.\nThe remote address is not reachable\nSimilar to <code>SHUT_WR</code> in POSIX.\nA TCP socket resource.\nA temporary failure in name resolution occurred.\nThe operation timed out before it could finish completely.\nUnknown error\nThe operation has been aborted because it could not be …\nAccept a new client socket.\nWhether this is a IPv4 or IPv6 socket.\nReturns the argument unchanged.\nReturns the argument unchanged.\nEquivalent to the IP_TTL &amp; IPV6_UNICAST_HOPS socket …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether the socket is in the <code>listening</code> state.\nThe maximum amount of keepalive packets TCP should send …\nEnables or disables keepalive.\nAmount of time the connection has to be idle before TCP …\nThe time between keepalive packets.\nGet the bound local address.\nThe kernel buffer space reserved for sends/receives on …\nGet the remote address.\nHints the desired listen queue size. Implementations are …\nInitiate a graceful shutdown.\nBind the socket to a specific network on the provided IP …\nConnect to a remote endpoint.\nStart listening for new connections.\nCreate a <code>pollable</code> which can be used to poll for, or block …\nAccess denied.\nA bind operation failed because the provided address is …\nA bind operation failed because the provided address is …\nThis operation is incompatible with another asynchronous …\nA TCP connection was aborted.\nThe TCP connection was forcefully rejected\nThe TCP connection was reset.\nThe size of a datagram sent to a UDP socket exceeded the …\nOne of the arguments is invalid.\nThe operation is not valid in the socket’s current state.\nSimilar to <code>AF_INET</code> in POSIX.\nSimilar to <code>AF_INET6</code> in POSIX.\nName does not exist or has no suitable associated IP …\nA new socket resource could not be created because of a …\nTrying to finish an asynchronous operation that:\nThe operation is not supported.\nNot enough memory to complete the operation.\nA permanent failure in name resolution occurred.\nThe remote address is not reachable\nA temporary failure in name resolution occurred.\nThe operation timed out before it could finish completely.\nUnknown error\nThe operation has been aborted because it could not be …\nCreate a new TCP socket.\nAccess denied.\nA bind operation failed because the provided address is …\nA bind operation failed because the provided address is …\nThis operation is incompatible with another asynchronous …\nA TCP connection was aborted.\nThe TCP connection was forcefully rejected\nThe TCP connection was reset.\nThe size of a datagram sent to a UDP socket exceeded the …\nA received datagram.\nOne of the arguments is invalid.\nThe operation is not valid in the socket’s current state.\nSimilar to <code>AF_INET</code> in POSIX.\nSimilar to <code>AF_INET6</code> in POSIX.\nName does not exist or has no suitable associated IP …\nA new socket resource could not be created because of a …\nTrying to finish an asynchronous operation that:\nThe operation is not supported.\nNot enough memory to complete the operation.\nA datagram to be sent out.\nA permanent failure in name resolution occurred.\nThe remote address is not reachable\nA temporary failure in name resolution occurred.\nThe operation timed out before it could finish completely.\nA UDP socket handle.\nUnknown error\nThe operation has been aborted because it could not be …\nWhether this is a IPv4 or IPv6 socket.\nCheck readiness for sending. This function never blocks.\nThe payload.\nThe payload.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the current bound address.\nReceive messages on the socket.\nThe kernel buffer space reserved for sends/receives on …\nGet the address the socket is currently streaming to.\nThe source address.\nThe destination address.\nSend messages on the socket.\nBind the socket to a specific network on the provided IP …\nSet up inbound &amp; outbound communication channels, …\nCreate a <code>pollable</code> which will resolve once the socket is …\nCreate a <code>pollable</code> which will resolve once the stream is …\nCreate a <code>pollable</code> which will resolve once the stream is …\nEquivalent to the IP_TTL &amp; IPV6_UNICAST_HOPS socket …\nAccess denied.\nA bind operation failed because the provided address is …\nA bind operation failed because the provided address is …\nThis operation is incompatible with another asynchronous …\nA TCP connection was aborted.\nThe TCP connection was forcefully rejected\nThe TCP connection was reset.\nThe size of a datagram sent to a UDP socket exceeded the …\nOne of the arguments is invalid.\nThe operation is not valid in the socket’s current state.\nSimilar to <code>AF_INET</code> in POSIX.\nSimilar to <code>AF_INET6</code> in POSIX.\nName does not exist or has no suitable associated IP …\nA new socket resource could not be created because of a …\nTrying to finish an asynchronous operation that:\nThe operation is not supported.\nNot enough memory to complete the operation.\nA permanent failure in name resolution occurred.\nThe remote address is not reachable\nA temporary failure in name resolution occurred.\nThe operation timed out before it could finish completely.\nUnknown error\nThe operation has been aborted because it could not be …\nCreate a new UDP socket.")