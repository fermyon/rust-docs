searchState.loadedDescShard("spin_factor_key_value", 0, "The requesting component does not have access to the …\nWrap each <code>Store</code> produced by the inner <code>StoreManager</code> in an …\n<code>Cas</code> trait describes the interface a key value compare and …\nA <code>StoreManager</code> which delegates to other <code>StoreManager</code>s …\nThe set of errors which may be raised by functions in this …\nMetadata key for key-value stores.\nA factor that provides key-value storage.\nThe host does not recognize the store label requested.\nSome implementation-specific error has occurred (e.g. I/O)\nToo many stores have been opened simultaneously. Closing …\n<code>SwapError</code> are errors that occur during compare and swap …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a store by label.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new KeyValueFactor.\nReturns true if the given store label is used by any …\nReturns the <code>StoreManager::summary</code> for the given store …\nA human-readable summary of the given store’s …\nA human-readable summary of the given store’s …\nRuntime configuration for all key value stores.\nAdds a store manager for the store with the given label to …\nReturns the argument unchanged.\nReturns the store manager for the store with the given …\nReturns whether a store manager exists for the store with …\nCalls <code>U::from(self)</code>.\nRuntime configuration implementation used by Spin CLI.\nDefines the construction of a key value store from a …\nUnique type identifier for the store.\nRuntime configuration for the store.\nConverts from toml based runtime configuration into a …\nThe store manager for the store.\nAdds a default store configuration for a label.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new store manager from the runtime configuration.\nCreate a new RuntimeConfigResolver.\nRegisters a store type to the resolver.\nResolves a toml table into a runtime config.")