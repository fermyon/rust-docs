searchState.loadedDescShard("spin_factor_outbound_http", 0, "The response has been consumed.\nContains the error value\nThe concrete type behind a …\nA <code>Result</code> type where the error type defaults to <code>HttpError</code>.\nCommon type for outgoing bodies.\nContains the success value\nConfiguration for an outgoing request.\nA pending response\nThe response is ready.\nSelfRequestOrigin indicates the base URI to use for “self…\nThe timeout between chunks of a streaming body\nThe timeout for connecting.\nThe timeout until the first byte.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if the response is ready.\nCreate a new OutboundHttpFactor.\nCreate a new <code>HostFutureIncomingResponse</code> that is pending on …\nCreate a new <code>HostFutureIncomingResponse</code> that is ready.\nSets a <code>OutboundHttpInterceptor</code> for this instance.\nSets the <code>SelfRequestOrigin</code> for this instance.\nUnwrap the response, panicking if it is not ready.\nWhether to use TLS for the request.\nThe given response will be returned as the result of the …\nThe intercepted request will be passed on to the default …\nThe type returned by an <code>OutboundHttpInterceptor</code>.\nAn intercepted outgoing HTTP request.\nAn outbound HTTP request interceptor to be used with …\nReturns the argument unchanged.\nReturns the argument unchanged.\nIntercept an outgoing HTTP request.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe body of the incoming request.\nThe <code>handle</code> function takes an outparam instead of returning …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConstructor for <code>GuestIndices</code> which takes a <code>Component</code> as …\nThis constructor is similar to <code>GuestIndices::new</code> except …\nThe sender for sending a response.")